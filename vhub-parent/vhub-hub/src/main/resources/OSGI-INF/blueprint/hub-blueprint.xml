<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
	xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs" xmlns:cxf="http://cxf.apache.org/blueprint/core"
	xmlns:camel="http://camel.apache.org/schema/blueprint" xmlns:camel-cxf="http://camel.apache.org/schema/blueprint/cxf"
	xsi:schemaLocation="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd
	http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint-2.16.3.xsd
	http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.16.3-blueprint.xsd">

	<cm:property-placeholder id="vhubHubProperties"
		persistent-id="com.virtusa.vhub.vhub_hub" update-strategy="reload">
		<cm:default-properties>
			<!-- <cm:property name="mq.brokerURL" value="tcp://localhost:61616" /> 
				<cm:property name="mq.userName" value="karaf" /> <cm:property name="mq.password" 
				value="karaf" /> <cm:property name="queue.consumer1.req" value="VHUB.COMMAND.CONS1.REQ" 
				/> <cm:property name="queue.consumer1.res" value="VHUB.COMMAND.CONS1.RES" 
				/> <cm:property name="queue.consumer2.req" value="VHUB.COMMAND.CONS2.REQ" 
				/> <cm:property name="queue.consumer2.res" value="VHUB.COMMAND.CONS2.RES" 
				/> <cm:property name="queue.consumer3.req" value="VHUB.COMMAND.CONS3.REQ" 
				/> <cm:property name="queue.consumer3.res" value="VHUB.COMMAND.CONS3.RES" 
				/> -->
		</cm:default-properties>
	</cm:property-placeholder>

	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${mq.brokerURL}" />
		<property name="userName" value="${mq.userName}" />
		<property name="password" value="${mq.password}" />
	</bean>

	<bean id="jmscomp" class="org.apache.camel.component.jms.JmsComponent">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

	<bean id="commandResponseAggregationStrategy"
		class="com.virtusa.vhub.hub.camel.processor.CommandResponseAggregationStrategy" />

	<bean id="jaxbContext" class="javax.xml.bind.JAXBContext"
		factory-method="newInstance">
		<argument>
			<list>
				<value>com.virtusa.vhub.common.entity.CommandExecutionStatus</value>
				<value>com.virtusa.vhub.common.entity.CommandRequestEntity</value>
				<value>com.virtusa.vhub.common.entity.CommandResponseEntity</value>
			</list>
		</argument>
	</bean>

	<bean id="jaxbDataFormat" class="org.apache.camel.converter.jaxb.JaxbDataFormat">
		<argument ref="jaxbContext" />
		<!-- <property name="mustBeJAXBElement" value="false"/> -->
	</bean>

	<camel-cxf:rsServer id="rsServer" address="/vhub/hub"
		serviceClass="com.virtusa.vhub.hub.CommandRouterResource"
		loggingFeatureEnabled="true">
	</camel-cxf:rsServer>

	<camelContext id="commandRouterContext"
		xmlns="http://camel.apache.org/schema/blueprint">
		<!-- <camel:propertyPlaceholder location="blueprint:vhubHubProperties" 
			/> -->
		<camel:dataFormats>
			<json id="jsonDataFormat" library="Jackson" />
		</camel:dataFormats>

		<!-- Route - Partner to Hub -->
		<camel:route id="commnandInRoute">
			<camel:from uri="cxfrs://bean://rsServer?bindingStyle=SimpleConsumer" />
			<camel:marshal ref="jaxbDataFormat" />
			<!-- <camel:marshal ref="jsonDataFormat" /> -->
			<camel:doTry>
				<camel:to uri="validator:CommadRouter.xsd" />
				<camel:validate>
					<camel:simple>${in.header.ThrowExceptionAtHub} != 'true'</camel:simple>
				</camel:validate>
				<camel:choice>
					<camel:when>
						<camel:simple>$simple{header.CommandType} == 'COMMAND1'</camel:simple>
						<camel:to uri="direct:consumer1-in" />
					</camel:when>
					<camel:when>
						<camel:simple>$simple{header.CommandType} == 'COMMAND2'</camel:simple>
						<camel:to uri="direct:consumer2-in" />
					</camel:when>
					<camel:otherwise>
						<camel:multicast strategyRef="commandResponseAggregationStrategy">
							<camel:to uri="direct:consumer2-in" />
							<camel:to uri="direct:consumer3-in" />
						</camel:multicast>
					</camel:otherwise>
				</camel:choice>
				<camel:doCatch>
					<exception>org.apache.camel.ValidationException</exception>
					<camel:to uri="log:EXCEPTION?showAll=true" />
					<camel:setBody>
						<camel:simple>
							${ref:exception400Response}
						</camel:simple>
					</camel:setBody>
				</camel:doCatch>
				<camel:doCatch>
					<camel:exception>org.apache.camel.processor.validation.PredicateValidationException</camel:exception>
					<camel:exception>java.lang.Exception</camel:exception>
					<camel:to uri="log:EXCEPTION?showAll=true" />
					<camel:setBody>
						<camel:simple>
							${ref:exception500Response}
						</camel:simple>
					</camel:setBody>
				</camel:doCatch>
			</camel:doTry>
		</camel:route>

		<!-- Routes - Hub to Consumer and Initial response from Consumer to Hub 
			and to Partner -->
		<camel:route>
			<camel:from uri="direct:consumer1-in" />
			<camel:to
				uri="jmscomp:{{queue.consumer1.req}}?jmsMessageType=Text&amp;replyTo={{queue.consumer1.res}}"
				pattern="InOut" />
			<camel:unmarshal ref="jaxbDataFormat" />
		</camel:route>
		<camel:route>
			<camel:from uri="direct:consumer2-in" />
			<camel:to
				uri="jmscomp:{{queue.consumer2.req}}?jmsMessageType=Text&amp;replyTo={{queue.consumer2.res}}"
				pattern="InOut" />
			<camel:unmarshal ref="jaxbDataFormat" />
		</camel:route>
		<camel:route>
			<camel:from uri="direct:consumer3-in" />
			<camel:to
				uri="jmscomp:{{queue.consumer3.req}}?jmsMessageType=Text&amp;replyTo={{queue.consumer3.res}}"
				pattern="InOut" />
			<camel:unmarshal ref="jaxbDataFormat" />
		</camel:route>

		<!-- Routes - Consumer to Hub and to Partner -->
		<camel:route>
			<camel:from
				uri="jmscomp:{{queue.consumer1.res}}?selector=AckType='FINAL'" />
			<camel:toD uri="http4://$simple{header.CommandCallBackUrl}" />
		</camel:route>
		<camel:route>
			<camel:from
				uri="jmscomp:{{queue.consumer2.res}}?selector=AckType='FINAL'" />
			<camel:toD uri="http4://$simple{header.CommandCallBackUrl}" />
		</camel:route>
		<camel:route>
			<camel:from
				uri="jmscomp:{{queue.consumer3.res}}?selector=AckType='FINAL'" />
			<camel:toD uri="http4://$simple{header.CommandCallBackUrl}" />
		</camel:route>
	</camelContext>

	<bean id="exception400Response" class="com.virtusa.vhub.common.entity.CommandResponseEntity">
		<property name="ackType" value="INITIAL" />
		<property name="commandResults">
			<list>
				<bean class="com.virtusa.vhub.common.entity.CommandExecutionStatus">
					<property name="executorId" value="vHub" />
					<property name="statusCode" value="400" />
					<property name="statusDescription"
						value="Data validation failed, please correct and resend." />
				</bean>
			</list>
		</property>
	</bean>
	<bean id="exception500Response" class="com.virtusa.vhub.common.entity.CommandResponseEntity">
		<property name="ackType" value="INITIAL" />
		<property name="commandResults">
			<list>
				<bean class="com.virtusa.vhub.common.entity.CommandExecutionStatus">
					<property name="executorId" value="vHub" />
					<property name="statusCode" value="500" />
					<property name="statusDescription"
						value="Something went wrong while routing your request, please try agin later." />
				</bean>
			</list>
		</property>
	</bean>
</blueprint>
